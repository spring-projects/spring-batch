-- Spring Batch 4.x schema for SQLite

CREATE TABLE BATCH_JOB_INSTANCE (
	JOB_INSTANCE_ID INTEGER PRIMARY KEY,
	VERSION INTEGER,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION (
	JOB_EXECUTION_ID INTEGER PRIMARY KEY,
	VERSION INTEGER,
	JOB_INSTANCE_ID INTEGER NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL,
	END_TIME DATETIME DEFAULT NULL,
	STATUS VARCHAR(10),
	EXIT_CODE VARCHAR(2500),
	EXIT_MESSAGE VARCHAR(2500),
	LAST_UPDATED DATETIME,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
	JOB_EXECUTION_ID INTEGER NOT NULL,
	TYPE_CD VARCHAR(6) NOT NULL,
	KEY_NAME VARCHAR(100) NOT NULL,
	STRING_VAL VARCHAR(250),
	DATE_VAL DATETIME DEFAULT NULL,
	LONG_VAL INTEGER,
	DOUBLE_VAL REAL,
	IDENTIFYING CHAR(1) NOT NULL,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION (
	STEP_EXECUTION_ID INTEGER PRIMARY KEY,
	VERSION INTEGER NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID INTEGER NOT NULL,
	START_TIME DATETIME NOT NULL,
	END_TIME DATETIME DEFAULT NULL,
	STATUS VARCHAR(10),
	COMMIT_COUNT INTEGER,
	READ_COUNT INTEGER,
	FILTER_COUNT INTEGER,
	WRITE_COUNT INTEGER,
	READ_SKIP_COUNT INTEGER,
	WRITE_SKIP_COUNT INTEGER,
	PROCESS_SKIP_COUNT INTEGER,
	ROLLBACK_COUNT INTEGER,
	EXIT_CODE VARCHAR(2500),
	EXIT_MESSAGE VARCHAR(2500),
	LAST_UPDATED DATETIME,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
	STEP_EXECUTION_ID INTEGER NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
	JOB_EXECUTION_ID INTEGER NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (ID INTEGER);
INSERT INTO BATCH_STEP_EXECUTION_SEQ VALUES(0);
CREATE TABLE BATCH_JOB_EXECUTION_SEQ (ID INTEGER);
INSERT INTO BATCH_JOB_EXECUTION_SEQ VALUES(0);
CREATE TABLE BATCH_JOB_SEQ (ID INTEGER);
INSERT INTO BATCH_JOB_SEQ VALUES(0);
