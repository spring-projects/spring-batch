-- Autogenerated: do not edit this file

CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NULL,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  NULL,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL NULL,
	END_TIME DATETIME DEFAULT NULL NULL,
	STATUS VARCHAR(10) NULL,
	EXIT_CODE VARCHAR(2500) NULL,
	EXIT_MESSAGE VARCHAR(2500) NULL,
	LAST_UPDATED DATETIME
) ;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	PARAMETER_NAME VARCHAR(100) NOT NULL ,
	PARAMETER_TYPE VARCHAR(100) NOT NULL ,
	PARAMETER_VALUE VARCHAR(2500) ,
	IDENTIFYING CHAR(1) NOT NULL
) ;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL NULL,
	END_TIME DATETIME DEFAULT NULL NULL,
	STATUS VARCHAR(10) NULL,
	COMMIT_COUNT BIGINT NULL,
	READ_COUNT BIGINT NULL,
	FILTER_COUNT BIGINT NULL,
	WRITE_COUNT BIGINT NULL,
	READ_SKIP_COUNT BIGINT NULL,
	WRITE_SKIP_COUNT BIGINT NULL,
	PROCESS_SKIP_COUNT BIGINT NULL,
	ROLLBACK_COUNT BIGINT NULL,
	EXIT_CODE VARCHAR(2500) NULL,
	EXIT_MESSAGE VARCHAR(2500) NULL,
	LAST_UPDATED DATETIME
) ;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT NULL
) ;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT NULL
) ;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (ID BIGINT IDENTITY);
CREATE TABLE BATCH_JOB_EXECUTION_SEQ (ID BIGINT IDENTITY);
CREATE TABLE BATCH_JOB_SEQ (ID BIGINT IDENTITY);

CREATE TRIGGER BATCH_JOB_INSTANCE_DELETE_TRIGGER
    ON BATCH_JOB_INSTANCE
    FOR DELETE
    AS
    DELETE BATCH_JOB_EXECUTION
    FROM BATCH_JOB_EXECUTION, deleted
    WHERE BATCH_JOB_EXECUTION.JOB_INSTANCE_ID = deleted.JOB_INSTANCE_ID;

CREATE TRIGGER BATCH_JOB_EXECUTION_DELETE_TRIGGER_DELETE_JOB_EXECUTION_CONTEXT
    ON BATCH_JOB_EXECUTION
    FOR DELETE
    AS
    DELETE BATCH_JOB_EXECUTION_CONTEXT
    FROM BATCH_JOB_EXECUTION_CONTEXT, deleted
    WHERE BATCH_JOB_EXECUTION_CONTEXT.JOB_EXECUTION_ID = deleted.JOB_INSTANCE_ID;

CREATE TRIGGER BATCH_JOB_EXECUTION_DELETE_TRIGGER_DELETE_JOB_EXECUTION_PARAMS
    ON BATCH_JOB_EXECUTION
    FOR DELETE
    AS
    DELETE BATCH_JOB_EXECUTION_PARAMS
    FROM BATCH_JOB_EXECUTION_PARAMS, deleted
    WHERE BATCH_JOB_EXECUTION_PARAMS.JOB_EXECUTION_ID = deleted.JOB_EXECUTION_ID;

CREATE TRIGGER BATCH_JOB_EXECUTION_DELETE_TRIGGER_DELETE_STEP_EXECUTION
    ON BATCH_JOB_EXECUTION
    FOR DELETE
    AS
    DELETE BATCH_STEP_EXECUTION
    FROM BATCH_STEP_EXECUTION, deleted
    WHERE BATCH_STEP_EXECUTION.JOB_EXECUTION_ID = deleted.JOB_EXECUTION_ID;

CREATE TRIGGER BATCH_JOB_EXECUTION_DELETE_TRIGGER_DELETE_STEP_EXECUTION_CONTEXT
    ON BATCH_STEP_EXECUTION
    FOR DELETE
    AS
    DELETE BATCH_STEP_EXECUTION_CONTEXT
    FROM BATCH_STEP_EXECUTION_CONTEXT, deleted
    WHERE BATCH_STEP_EXECUTION_CONTEXT.STEP_EXECUTION_ID = deleted.STEP_EXECUTION_ID;
